const FORM_URL="https://docs.google.com/forms/u/0/d/e/1FAIpQLSej8F-WqVXrneoK1caUwagNb8EbcsLG7c2IWbgzlGIxd7xYAQ/formResponse",SHEET_URL="https://docs.google.com/spreadsheets/d/1oQ7TEJLutMpXo4gi75jTOmlBGPBHlF3ekE0mtA3nK_M/gviz/tq?tqx=out:json",DELETE_URL="https://script.google.com/macros/s/AKfycbyNUCRo3JKNk_bVq9VcdpbICGuBiTytBGRAjFr7VDrHVvG6TMxaA195sBSSBOeiR1DG/exec";let localConnection,dataChannel,pollingInterval,isManuallyConnecting=!1,peerId=null,mediaSendQueue=[],isSendingFile=!1,pingIntervalId=null,mediaChannels=[],mediaReceivingChunks={},lastPingReceivedTime=Date.now();const CONNECTION_TIMEOUT=12e4,CHUNK_TIMEOUT=5e3,MAX_RETRIES=5,NUM_MEDIA_CHANNELS=3,PING_INTERVAL=1e4,CHUNK_SIZE=65536,BUFFER_THRESHOLD=262144;let fileReader=new FileReader,currentFile=null,retryCounts=new Map,activeTransfers=new Map;const receivedTransfers=new Map;async function startConnection(e){console.log(`Starting connection for peerId: ${e}`);const n=await fetchSDP(e,"offer");n?(console.log("Offer found, acting as answerer"),await setupAnswerer(n)):(console.log("No offer found, acting as offerer"),await setupOfferer(e))}async function setupOfferer(e){localConnection=createPeerConnection(),dataChannel=localConnection.createDataChannel("chat"),mediaChannels=[];for(let e=0;e<NUM_MEDIA_CHANNELS;e++){const n=localConnection.createDataChannel(`media-${e}`);setupMediaDataChannel(n,e),mediaChannels.push(n)}setupDataChannel(),updateConnectionStatus("Offer Creating...","10",!1);try{const n=await localConnection.createOffer();await localConnection.setLocalDescription(n),await waitForIceGathering(localConnection),console.log(`Submitting offer SDP for peerId: ${e}`),await submitSDP(e,"offer",JSON.stringify(localConnection.localDescription)),updateConnectionStatus("Waiting for peer...","100",!0);let t=Date.now();pollingInterval=setInterval((async()=>{const n=Date.now()-t;if(n>CONNECTION_TIMEOUT)return clearInterval(pollingInterval),$("#peerIdSubmit").prop("disabled",!1).text("Connect"),$("#joinPeer").prop("disabled",!1).text("Join"),showAlert("Connection timed out. Please try again or check peer ID."),void $("#delete-all-btn").click();const a=await fetchSDP(e,"answer");if(updateConnectionStatus("Waiting for peer...",Math.min(n/CONNECTION_TIMEOUT*100,99),!0),a){console.log(`Answer SDP found for peerId: ${e}`),clearInterval(pollingInterval);try{const e=JSON.parse(a.sdp);await localConnection.setRemoteDescription(new RTCSessionDescription(e)),updateConnectionStatus("Connected Successfully!","100",!0),console.log("✅ Remote description (answer) set successfully")}catch(e){console.error("❌ Failed to set remote description (answer):",e)}}}),4e3)}catch(e){console.error("Error setting up offerer:",e),$("#peerIdSubmit").prop("disabled",!1).text("Connect"),$("#joinPeer").prop("disabled",!1).text("Join"),showAlert("Failed to establish connection. Please try again.")}}async function setupAnswerer(e){localConnection=createPeerConnection(),localConnection.ondatachannel=e=>{const n=e.channel;if("chat"===n.label)dataChannel=n,setupDataChannel();else if(n.label.startsWith("media-")){const e=parseInt(n.label.split("-")[1]);isNaN(e)||(mediaChannels[e]=n,setupMediaDataChannel(n,e))}};try{console.log("Parsing and setting remote offer...");const n=JSON.parse(e.sdp);await localConnection.setRemoteDescription(new RTCSessionDescription(n)),console.log("✅ Remote description (offer) set successfully"),console.log("Creating answer...");const t=await localConnection.createAnswer();await localConnection.setLocalDescription(t),console.log("✅ Local answer set successfully"),await waitForIceGathering(localConnection),console.log(`Submitting answer SDP for peerId: ${e.peerId}`),await submitSDP(e.peerId,"answer",JSON.stringify(localConnection.localDescription))}catch(e){console.error("❌ Error setting up answerer:",e),$("#peerIdSubmit").prop("disabled",!1).text("Connect"),$("#joinPeer").prop("disabled",!1).text("Join"),showAlert("Failed to establish connection. Please try again.")}}function createPeerConnection(){const e=JSON.parse(localStorage.getItem("selectedStunServers")||"[]"),n=e.length>=1?e:["stun:global.stun.twilio.com:3478"],t=new RTCPeerConnection({iceServers:n.map((e=>({urls:e}))),iceCandidatePoolSize:0});return t.oniceconnectionstatechange=()=>{console.log("ICE connection state:",t.iceConnectionState);const e=$("#status");["connected","completed"].includes(t.iceConnectionState)?e.text("Online"):["disconnected","failed","closed"].includes(t.iceConnectionState)&&e.text("Offline")},t}function waitForIceGathering(e){return updateConnectionStatus("ICE Gathering...","80",!1),new Promise((n=>{if("complete"===e.iceGatheringState)return n();const t=()=>{"complete"===e.iceGatheringState&&(e.removeEventListener("icegatheringstatechange",t),n())};e.addEventListener("icegatheringstatechange",t)}))}async function submitSDP(e,n,t){updateConnectionStatus("Submitting Offer...","90",!1);const a=new FormData;a.append("entry.1244760702",e),a.append("entry.443244439",n),a.append("entry.479288741",t);try{await fetch(FORM_URL,{method:"POST",mode:"no-cors",body:a}),console.log(`Submitted ${n} SDP for peerId: ${e}`),updateConnectionStatus("Offer Submitted","99",!1)}catch(e){throw console.error(`Error submitting ${n} SDP:`,e),e}}async function fetchSDP(e,n){try{const t=await fetch(SHEET_URL),a=await t.text(),o=JSON.parse(a.substring(47).slice(0,-2)).table.rows;for(let t of o){const a=t.c[1]?.v,o=t.c[2]?.v,s=t.c[3]?.v;if(a==e&&o==n&&s)return console.log(`Found ${n} SDP for peerId: ${a}`),{peerId:a,role:o,sdp:s}}return console.log(`No ${n} SDP found for peerId: ${e}`),null}catch(t){return console.error(`Failed to fetch ${n} SDP for peerId: ${e}:`,t),null}}function setupDataChannel(){peerId?(dataChannel.onopen=()=>{console.log("Data channel opened for peerId:",peerId),deletePeerFromSheet(peerId),pingIntervalId=setInterval((()=>{"open"===dataChannel.readyState&&dataChannel.send(JSON.stringify({type:"ping",timestamp:Date.now()}))}),PING_INTERVAL),dataChannel.send(JSON.stringify({type:"username",name:truncateName($("#chat-username").val()||"Anonymous")})),transitionToChat()},dataChannel.onmessage=e=>{if(e.data instanceof ArrayBuffer){const n=new Uint32Array(e.data,0,3),[t,a,o]=n;let s=null;for(const[e,n]of receivedTransfers.entries())if(n.fileInfo.useSingleChannel){s=e;break}if(!s)return void console.warn("No active single-channel transfer found for incoming chunk.");const r=receivedTransfers.get(s);if(!r)return void console.warn("Received chunk but no file info available yet.");const i=e.data.slice(12);if(r.buffers.push(i),r.receivedBytes+=i.byteLength,r.expectedChunk++,updateProgressBar(s,r.receivedBytes/r.fileInfo.fileSize*100),r.receivedBytes>=r.fileInfo.fileSize){clearTimeout(r.timeoutId);try{const e=new Blob(r.buffers,{type:r.fileInfo.fileType||"application/octet-stream"}),n=URL.createObjectURL(e);displayMessage(r.fileInfo.name,r.fileInfo.fileName,!1,"file",n,s,"delivered",r.fileInfo.fileType,r.fileInfo.fileSize)}catch(e){console.error(`Error reconstructing file ${r.fileInfo.fileName}:`,e),showAlert("Failed to reconstruct received file.")}hideProgressBar(s),receivedTransfers.delete(s),retryCounts.delete(s)}else clearTimeout(r.timeoutId),r.timeoutId=setTimeout((()=>{const e=retryCounts.get(s)||0;e<MAX_RETRIES?(console.warn(`Resend request: ${s} [${t}-${r.expectedChunk}]`),retryCounts.set(s,e+1),dataChannel.send(JSON.stringify({type:"resend_request",messageId:s,majorIndex:t,chunkIndex:r.expectedChunk}))):(showAlert(`Failed to receive all chunks for ${r.fileInfo.fileName}.`),hideProgressBar(s),receivedTransfers.delete(s),retryCounts.delete(s))}),CHUNK_TIMEOUT)}else{const n=JSON.parse(e.data);"text"===n.type?displayMessage(n.name,n.message,!1,"text",null,n.messageId,"delivered"):"location"===n.type?displayMessage(n.name||"Peer",n,!1,"location",null,n.messageId,"delivered"):"file"===n.type?(receivedTransfers.set(n.messageId,{fileInfo:{name:n.name,messageId:n.messageId,fileName:n.fileName,fileSize:n.fileSize,fileType:n.fileType,useSingleChannel:n.useSingleChannel||!1},buffers:[],receivedBytes:0,expectedChunk:0,lastChunkTime:Date.now(),timeoutId:null}),n.useSingleChannel||(mediaReceivingChunks[n.messageId]={fileInfo:{name:n.name,fileName:n.fileName,fileSize:n.fileSize,fileType:n.fileType},parts:new Array(NUM_MEDIA_CHANNELS),bytesReceived:0,expectedSize:n.fileSize,completed:!1}),showProgressBar(n.messageId,!1),console.log(`Received file metadata for ${n.fileName}`)):"resend_request"===n.type?(console.log(`🔁 Resend request for ${n.messageId} [${n.majorIndex}-${n.chunkIndex}]`),resendFileChunk(n.messageId,n.majorIndex,n.chunkIndex)):"username"===n.type?(console.log("Received peer username:",n.name),$("#headerBtnName").text(n.name).addClass("text-capitalize")):"ping"===n.type&&(console.log(`📡 Ping received from peer at ${new Date(n.timestamp).toLocaleTimeString()}`),$("#status").text("Online"),lastPingReceivedTime=Date.now())}},dataChannel.onerror=e=>{console.error("Data channel error:",e);for(const[e,n]of receivedTransfers.entries())hideProgressBar(e),showAlert(`Transfer error for ${n.fileInfo.fileName}. Please try again.`),clearTimeout(n.timeoutId),retryCounts.delete(e);receivedTransfers.clear()}):console.error("peerId is undefined in setupDataChannel")}function setupMediaDataChannel(e,n){e.onmessage=e=>{const n=new Uint8Array(e.data),t=new Uint32Array(n.slice(0,12).buffer),a=t[0],o=t[1],s=t[2],r=n.slice(12),i=Object.entries(mediaReceivingChunks).find((([e,n])=>!n.completed&&3===n.parts.length));if(!i)return void console.warn("Received chunk but no file info available yet or this is a single-channel transfer.");const[l,c]=i;c.parts[a]||(c.parts[a]=new Array(s).fill(null)),c.parts[a][o]||(c.parts[a][o]=r,c.bytesReceived+=r.byteLength),c.lastReceivedTime||(c.lastReceivedTime={}),c.lastReceivedTime[`${a}-${o}`]=Date.now(),c.resendIntervalId||(c.resendIntervalId=setInterval((()=>{if(!c.parts.every((e=>e&&e.every((e=>e)))))for(let e=0;e<c.parts.length;e++)if(Array.isArray(c.parts[e]))for(let n=0;n<c.parts[e].length;n++)if(!c.parts[e][n])return console.warn(`⏳ Missing chunk detected: [${e}-${n}] for messageId ${l}`),void dataChannel.send(JSON.stringify({type:"resend_request",messageId:l,majorIndex:e,chunkIndex:n}))}),CHUNK_TIMEOUT)),updateProgressBar(l,c.bytesReceived/c.expectedSize*100);if(!(3===c.parts.length&&c.parts.every((e=>Array.isArray(e)&&e.length===s&&e.every((e=>null!=e))))))return void console.warn("❗ File assembly attempted before all chunks arrived. Parts:",c.parts);clearInterval(c.resendIntervalId),delete c.resendIntervalId,c.completed=!0;const d=c.parts.flat(),f=new Blob(d,{type:c.fileInfo.fileType}),u=URL.createObjectURL(f);displayMessage(c.fileInfo.name,c.fileInfo.fileName,!1,"file",u,l,"delivered",c.fileInfo.fileType,c.fileInfo.fileSize),hideProgressBar(l),delete mediaReceivingChunks[l]},e.onerror=e=>{console.error("Media channel error (index "+n+"):",e),$("#status").text("Offline"),showPeerOfflineModal()},e.onopen=()=>{console.log("Media data channel "+n+" opened")}}function sendFileChunks(e,n=(()=>{})){const t=activeTransfers.get(e);if(!t)return;if(t.useSingleChannel){const a=dataChannel;if(!a)return console.warn("No open media channel available."),void showAlert("No media channel available to send the file.");const o=Math.ceil(t.file.size/CHUNK_SIZE);let s=0,r=0,i=0;const l=()=>{if(i>=o)return console.log("✅ File sending complete (single channel) for messageId:",e),hideProgressBar(e),$("#chat-file").val(""),$("#btn-toggle-back").click(),currentFile=null,activeTransfers.delete(e),retryCounts.delete(e),void n();if(a.bufferedAmount>4194304)return void setTimeout(l,100);const c=i*CHUNK_SIZE,d=Math.min(c+CHUNK_SIZE,t.file.size),f=t.file.slice(c,d),u=new FileReader;u.onload=()=>{try{const n=new Uint32Array([0,i,o]),t=new Uint8Array(u.result),c=new Uint8Array(n.byteLength+t.byteLength);c.set(new Uint8Array(n.buffer),0),c.set(t,n.byteLength),a.send(c.buffer),s++;const d=s/o*100;d-r>=1&&(r=d,updateProgressBar(e,d)),i++,setTimeout(l,0)}catch(t){console.error("❌ Error sending chunk:",t),hideProgressBar(e),showAlert("Failed to send chunk."),n()}},u.onerror=()=>{console.error("❌ FileReader error during send"),hideProgressBar(e),showAlert("Failed to read file chunk."),n()},u.readAsArrayBuffer(f)};return void l()}const a=t.file,o=a.size,s=CHUNK_SIZE,r=mediaChannels.length,i=Math.ceil(o/r),l=[];for(let e=0;e<r;e++){const n=e*i,t=Math.min(n+i,o);l[e]=[];for(let o=n;o<t;o+=s){const n=a.slice(o,Math.min(o+s,t));l[e].push(n)}}t.chunkParts=l;const c=l.flat().length;let d=0,f=0;l.forEach(((t,a)=>{let o=0;const s=()=>{if(o>=t.length)return;const r=mediaChannels[a];if(!r||"open"!==r.readyState)return console.warn(`Channel ${a} not ready`),void setTimeout(s,100);if(r.bufferedAmount>4194304)return void setTimeout(s,100);const i=new FileReader;i.onload=()=>{try{const n=new Uint32Array([a,o,t.length]),l=new Uint8Array(i.result),u=new Uint8Array(n.byteLength+l.byteLength);u.set(new Uint8Array(n.buffer),0),u.set(l,n.byteLength),r.send(u.buffer),d++;const p=d/c*100;p-f>=1&&(f=p,updateProgressBar(e,p)),o++,setTimeout(s,0)}catch(t){console.error("❌ Send error:",t),hideProgressBar(e),showAlert("Failed to send chunk"),n()}},i.onerror=()=>{console.error("❌ FileReader error"),hideProgressBar(e),showAlert("Failed to read chunk"),n()},i.readAsArrayBuffer(t[o])};s()}));const u=setInterval((()=>{d>=c&&(clearInterval(u),console.log("✅ File sending complete for messageId:",e),hideProgressBar(e),$("#chat-file").val(""),$("#btn-toggle-back").click(),currentFile=null,activeTransfers.delete(e),retryCounts.delete(e),n())}),300)}function resendFileChunk(e,n,t){const a=activeTransfers.get(e);if(!a||!a.chunkParts)return void console.warn("Cannot resend chunk: missing transfer info or chunkParts");const o=a.chunkParts[n];if(!o||!o[t])return void console.warn(`Chunk not found for resend: major ${n}, index ${t}`);const s=mediaChannels[n];if(!s||"open"!==s.readyState)return console.warn(`Channel ${n} not ready for resend`),void setTimeout((()=>resendFileChunk(e,n,t)),200);const r=new FileReader;r.onload=()=>{try{const a=new Uint32Array([n,t,o.length]),i=new Uint8Array(r.result),l=new Uint8Array(a.byteLength+i.byteLength);l.set(new Uint8Array(a.buffer),0),l.set(i,a.byteLength),s.send(l.buffer),console.log(`✅ Resent chunk [${n}-${t}] for messageId: ${e}`)}catch(e){console.error("❌ Resend failed:",e)}},r.onerror=()=>{console.error(`❌ FileReader error during resend for [${n}-${t}]`)},r.readAsArrayBuffer(o[t])}function showProgressBar(e,n){const t=n?"self":"other";let a="Unknown File";n?a=activeTransfers.get(e)?.fileName||"Unknown File":mediaReceivingChunks[e]?.fileInfo?.fileName?a=mediaReceivingChunks[e].fileInfo.fileName:receivedTransfers.get(e)?.fileInfo?.fileName&&(a=receivedTransfers.get(e).fileInfo.fileName),$("#chat-display").append(`\n    <div class="chat-message ${t} px-3" id="progress-${e}">\n      <div class="file-name mt-2" style="font-size: 14px; font-weight: 500;">${truncateName(a,25)}</div>\n      <div class="progress mt-2" style="height: 30px;">\n        <div class="progress-bar progress-bar-striped progress-bar-animated bg-info" \n             role="progressbar" \n             style="width: 0%; font-size: 16px; line-height: 30px;" \n             aria-valuenow="0" \n             aria-valuemin="0" \n             aria-valuemax="100">\n             <span class="progress-percentage">0%</span>\n        </div>\n      </div>\n    </div>\n  `),$("#chat-display").scrollTop($("#chat-display")[0].scrollHeight)}function updateProgressBar(e,n){const t=Math.min(100,Math.round(n));$(`#progress-${e} .progress-bar`).css("width",`${t}%`).attr("aria-valuenow",t).find(".progress-percentage").text(`${t}%`)}function hideProgressBar(e){$(`#progress-${e}`).remove()}function showQueuedProgress(e,n){$("#chat-display").append(`\n    <div class="chat-message self px-3" id="${e}">\n      <div class="file-name mt-2" style="font-size: 14px; font-weight: 500;">${truncateName(n,25)}</div>\n      <div class="progress mt-2" style="height: 30px;">\n        <div class="progress-bar bg-secondary text-white" \n             style="width: 100%; font-size: 14px; line-height: 30px;">\n          Queued...\n        </div>\n      </div>\n    </div>\n  `),$("#chat-display").scrollTop($("#chat-display")[0].scrollHeight)}function transitionToChat(){$("#ai-btn").addClass("d-none"),$("#chat-section").hasClass("d-none")&&($("#login-section").removeClass("d-flex").addClass("d-none"),$("#chat-section").removeClass("d-none"),$("#peerIdSubmit").prop("disabled",!1).text("Disconnect"),console.log("Transitioned to chat UI"))}function displayMessage(e,n,t,a,o,s,r,i=null,l=null){const c=t?"self":"other",d=t?'<span class="status-icon text-muted ms-2"><i class="fas fa-check-double"></i></span>':"",f=(new Date).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});let u=n;if("location"===a){const e="string"==typeof n?JSON.parse(n):n,t=e.url;u=`\n      <div class="card shadow-sm border-0">\n        <div class="ratio ratio-16x9">\n          <iframe class="rounded" src="https://maps.google.com/maps?q=${e.lat},${e.lng}&z=15&output=embed" frameborder="0"></iframe>\n        </div>\n        <div class="p-2">\n          <div class="fw-bold mb-1 text-truncate">${t}</div>\n          <a href="${t}" target="_blank" class="btn btn-sm btn-outline-primary w-100"><i class="fas fa-map-pin me-1"></i> Go to</a>\n        </div>\n      </div>`}else if("file"===a&&o){const e=i&&i.startsWith("image/"),t=i&&i.startsWith("audio/"),a=i&&i.startsWith("video/"),s=`<a href="${o}" download="${n}" class="btn btn-sm btn-secondary w-100 mt-2 d-block"><i class="fas fa-download me-2"></i>Download</a>`,r=`<div class="file-name" style="font-size: 13px; font-weight: 500;">${truncateName(n,25)}</div>`,c=`<div class="file-name" style="font-size: 10px;font-weight:500;">${formatBytes(l)} • <span class="text-uppercase">${n.slice(n.lastIndexOf(".")+1)}</span></div>`;if(e)u=`\n      <div class="image-wrapper" style="max-width: 100%; overflow: hidden;">\n        <img src="${o}" alt="${n}" class="img-fluid rounded mt-2" style="width: 100%; height: auto; object-fit: contain;" />\n      </div>\n      <br>${r} ${c} ${s}`;else if(t){const e=`waveform-${Date.now()}`;u=`\n          <div class="card shadow-sm rounded-3 p-3 mb-2" style="background-color: #f8f9fa;">\n            <div id="${e}" class="waveform rounded mb-3" style="width: 100%; height: 80px;"></div>\n\n            <div class="text-center fw-semibold mb-2" style="word-break: break-word;">\n              ${r}\n            </div>\n\n            <div class="d-flex justify-content-center">\n              <button id="btn-${e}" onclick="togglePlayPause('${e}')" class="btn btn-outline-primary btn-sm rounded-pill px-4">\n                <i id="icon-${e}" class="fas fa-play"></i>\n              </button>\n            </div>\n          </div>\n\n          <div class="text-end mb-3">\n            ${c}\n            ${s}\n          </div>\n        `,setTimeout((()=>{const n=WaveSurfer.create({container:`#${e}`,waveColor:"#ccc",progressColor:"#0d6efd",height:80,responsive:!0});n.load(o),window[`player_${e}`]=n}),100)}else if(a)u=`\n      <div class="plyr-wrapper rounded overflow-hidden mt-2" style="max-width: 100%;">\n        <video id="player-${Date.now()}" class="plyr w-100" controls playsinline style="object-fit: contain; min-height: 300px;">\n          <source src="${o}" type="video/webm" />\n        </video>\n      </div>\n        <br>${r} ${c} ${s}`,setTimeout((()=>{Plyr.setup("video")}),0);else{let e="fa-file text-dark";"application/pdf"===i?e="fa-file-pdf text-danger":i.includes("word")?e="fa-file-word text-primary":"application/vnd.ms-excel"===i||"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"===i?e="fa-file-excel text-success":"application/vnd.ms-powerpoint"===i||"application/vnd.openxmlformats-officedocument.presentationml.presentation"===i?e="fa-file-powerpoint text-warning":i.includes("zip")||i.includes("rar")?e="fa-file-archive text-muted":i.includes("text")&&(e="fa-file-lines text-secondary"),u=`<i class="fas ${e} me-2 fs-4"></i> ${r} ${c} ${s}`}}try{$("#chat-display").append(`\n      <div class="chat-message ${c} px-3">\n        <div class="message py-1" style="font-size:12px;font-weight:450;">${u}</div>\n        <div class="message-meta d-flex justify-content-end border-top border-secondary mt-2">\n          <span class="timestamp text-end" style="font-size:10px;">${t?"":'<span class="name" style="font-size:12px;"></span>'} ${f} ${d}</span>\n        </div>\n      </div>\n    `),$("#chat-display").scrollTop($("#chat-display")[0].scrollHeight),console.log(`Displayed message for ${a}: ${n}, fileType: ${i||"none"}`)}catch(e){console.error(`Error displaying message for ${n}:`,e),showAlert("Failed to display message in UI. Please refresh the page.")}}function deletePeerFromSheet(e){e?fetch(DELETE_URL,{method:"POST",body:new URLSearchParams({peerId:e})}).then((e=>e.text())).then((n=>console.log("Deleted SDP for peerId:",e,n))).catch((n=>console.error("Delete error for peerId:",e,n))):console.error("peerId is undefined in deletePeerFromSheet")}async function startJoinConnection(e){console.log(`Starting join connection for peerId: ${e}`),updateConnectionStatus("Waiting for offer...","10",!1);let n=Date.now();pollingInterval=setInterval((async()=>{const t=Date.now()-n;if(t>CONNECTION_TIMEOUT)return clearInterval(pollingInterval),$("#joinPeer").prop("disabled",!1).text("Join"),$("#peerIdSubmit").prop("disabled",!1).text("Connect"),void showAlert("No offer found. Please try again or check peer ID.");const a=await fetchSDP(e,"offer");if(updateConnectionStatus("Waiting for offer...",Math.min(t/CONNECTION_TIMEOUT*100,99),!0),a){console.log(`Offer SDP found for peerId: ${e}, proceeding as answerer`),clearInterval(pollingInterval);try{await setupAnswerer(a),updateConnectionStatus("Joined Successfully","100",!0)}catch(e){console.error("Error during join connection:",e),$("#joinPeer").prop("disabled",!1).text("Join"),$("#peerIdSubmit").prop("disabled",!1).text("Connect"),showAlert("Failed to join connection. Please try again.")}}else console.log(`No offer SDP found yet for peerId: ${e}`)}),3e3)}function loadStunSettings(){const e=JSON.parse(localStorage.getItem("selectedStunServers")||"[]"),n=e.length>=1?e:["stun:global.stun.twilio.com:3478"];$(".stun-option").each((function(){$(this).prop("checked",n.includes(this.value))}))}function updateConnectionStatus(e,n,t=!1){$("#connectionStatusPanel").removeClass("d-none"),$("#connectionStatusText").text(e),$("#connectionProgressBar").css("width",n+"%"),t&&($("#connectionProgressBar").removeClass("custom-bg").addClass("bg-success"),$("#spin-border").addClass("text-success"))}function showAlert(e,n=!0){const t=$(`\n      <div class="alert custom-alert ${n?"alert-danger":"alert-success"} alert-dismissible fade show fixed-top d-flex align-items-center rounded-pill" role="alert" style="top: 10px; left: 50%; transform: translateX(-50%); z-index: 2000;">\n        <span class="${n?"text-danger":"text-success"}">${e}</span>\n        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n      </div>\n    `);$("body").append(t),setTimeout((function(){t.fadeOut(1e3,(function(){$(this).remove()}))}),4e3)}function truncateName(e,n=10){return(e=e.trim()).length>n?e.slice(0,n-3)+"...":e}function togglePlayPause(e){const n=window[`player_${e}`],t=document.getElementById(`icon-${e}`);n&&(n.playPause(),n.isPlaying()?(t.classList.remove("fa-play"),t.classList.add("fa-pause")):(t.classList.remove("fa-pause"),t.classList.add("fa-play")))}function processNextFileInQueue(){if(0===mediaSendQueue.length)return void(isSendingFile=!1);const e=mediaSendQueue.shift(),n=e.file,t=e.queueId;isSendingFile=!0,t&&$(`#${t}`).remove();const a=$("#chat-username").val()||"Anonymous",o=Date.now().toString(),s=n.size<1048576;currentChunk=0,totalChunks=Math.ceil(n.size/CHUNK_SIZE);const r=[],i=mediaChannels.length,l=Math.ceil(n.size/i);for(let e=0;e<i;e++){const t=e*l,a=Math.min(t+l,n.size);r[e]=[];for(let o=t;o<a;o+=CHUNK_SIZE){const t=n.slice(o,Math.min(o+CHUNK_SIZE,a));r[e].push(t)}}activeTransfers.set(o,{file:n,fileName:n.name,fileSize:n.size,fileType:n.type||"application/octet-stream",totalChunks:r.flat().length,chunkParts:r,useSingleChannel:s});const c={type:"file",name:a,messageId:o,fileName:n.name,fileSize:n.size,fileType:n.type||"application/octet-stream",useSingleChannel:s};try{dataChannel.send(JSON.stringify(c));const e=URL.createObjectURL(n);displayMessage(a,n.name,!0,"file",e,o,"sent",c.fileType,c.fileSize),showProgressBar(o,!0),setTimeout((()=>{sendFileChunks(o,(()=>{isSendingFile=!1,processNextFileInQueue()}))}),100)}catch(e){console.error("Error sending file:",e),hideProgressBar(o),activeTransfers.delete(o),showAlert("Failed to send file. Please try again."),isSendingFile=!1,processNextFileInQueue()}}function handleIncomingChunk(e,n,t){const a=mediaReceivingChunks[n];if(!a||!a.fileInfo)return void console.warn(`⚠️ No fileInfo available for messageId: ${n}`);a.buffers||(a.buffers=[],a.receivedBytes=0),a.buffers.push(e),a.receivedBytes+=e.byteLength;const o=a.receivedBytes,s=a.fileInfo.fileSize;if(updateProgressBar(n,o/s*100),o>=s){try{const e=new Blob(a.buffers,{type:a.fileInfo.fileType||"application/octet-stream"}),t=URL.createObjectURL(e);displayMessage(a.fileInfo.name,a.fileInfo.fileName,!1,"file",t,n,"delivered",a.fileInfo.fileType,a.fileInfo.fileSize)}catch(e){console.error(`Error creating blob from chunks for ${n}:`,e),showAlert("Failed to reconstruct received file.")}hideProgressBar(n),delete mediaReceivingChunks[n]}}function showPeerOfflineModal(){if($("#peerOfflineModal").length>0)return;$("body").append('\n    <div class="modal fade" id="peerOfflineModal" tabindex="-1" aria-labelledby="peerOfflineModalLabel" aria-hidden="true">\n      <div class="modal-dialog modal-dialog-centered">\n        <div class="modal-content text-center">\n          <div class="modal-header">\n            <h5 class="modal-title w-100" id="peerOfflineModalLabel">Connection Lost</h5>\n          </div>\n          <div class="modal-body">\n            <p>Your peer seems to be offline or has closed the chat.</p>\n          </div>\n          <div class="modal-footer justify-content-center">\n            <button type="button" class="btn btn-primary" onclick="location.reload()">Reload</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  ');new bootstrap.Modal(document.getElementById("peerOfflineModal")).show()}function formatBytes(e){if(0===e)return"0 Bytes";const n=Math.floor(Math.log(e)/Math.log(1024)),t=e/Math.pow(1024,n);return`${t<10?t.toFixed(1):Math.round(t)} ${["Bytes","KB","MB","GB","TB"][n]}`}$(document).ready((()=>{let e=localStorage.getItem("peerIds")||"",n=localStorage.getItem("peerName")||"";n&&($("#chat-username").val(n),$("#peer-id").val(e)),$("#peerIdSubmit").click((async function(e){e.preventDefault(),isManuallyConnecting=!0;var n=$("#chat-username").val().trim();peerId=$("#peer-id").val().trim(),$("#chat-username").prop("disabled",!0),$("#peer-id").prop("disabled",!0),$("#name-error").text(""),$("#peer-error").text("");n||(n="Anonymous"),peerId||(peerId="peer123"),$("#peerIdSubmit").prop("disabled",!0).text("Connecting..."),$("#joinPeer").prop("disabled",!0).text("Join"),$("#peerId").val(peerId),$("#peerBtnGroup").removeClass("d-flex").addClass("d-none"),$("#connectionStatusPanel").removeClass("d-none"),updateConnectionStatus("Connecting...","5",!1),startConnection(peerId)})),$("#media-input-group").change((e=>{const n=e.target.files[0];currentFile=n||null})),$("#btn-send-media").click((()=>{if(!currentFile)return showAlert("No file is selected!"),void $("#media-input").click();const e=`queue-${Date.now()}`,n={file:currentFile,queueId:e};(isSendingFile||mediaSendQueue.length>0)&&showQueuedProgress(e,currentFile.name),currentFile=null,$("#chat-file").val(""),mediaSendQueue.push(n),isSendingFile||processNextFileInQueue()})),$("#reloadBtn").click((function(){location.reload()})),$("#btn-send-text").click((()=>{const e=$("#chat-username").val()||"Anonymous",n=$("#chat-message").val(),t=Date.now().toString();if(n&&dataChannel&&"open"===dataChannel.readyState){console.log("Sending text message, dataChannel state:",dataChannel.readyState);try{dataChannel.send(JSON.stringify({type:"text",name:e,message:n,messageId:t})),displayMessage(e,n,!0,"text",null,t,"sent"),$("#chat-message").val("").focus()}catch(e){console.error("Error sending text message:",e),showAlert("Failed to send message. Please try again.")}}else console.warn("Cannot send text, dataChannel state:",dataChannel?dataChannel.readyState:"undefined"),showAlert("Please wait until the connection is established before sending a message.")})),$("#delete-all-btn").click((()=>{fetch(DELETE_URL,{method:"POST",body:new URLSearchParams({peerId:""})}).then((e=>e.text())).then((e=>{showAlert(`Deleted all SDP entries: ${e}`,!1),setTimeout((()=>{location.reload()}),3e3)})).catch((e=>showAlert(`Error deleting SDP entries: ${e}`)))})),$("#joinPeer").click((async function(e){e.preventDefault(),isManuallyConnecting=!0;const n=$("#chat-username").val().trim();peerId=$("#peer-id").val().trim(),$("#chat-username").prop("disabled",!0),$("#peer-id").prop("disabled",!0),$("#name-error").text(""),$("#peer-error").text("");let t=!1;n||($("#name-error").text("Name is required"),$("#chat-username").prop("disabled",!1),$("#peer-id").prop("disabled",!1),t=!0),peerId||($("#peer-error").text("Peer ID is required"),$("#chat-username").prop("disabled",!1),$("#peer-id").prop("disabled",!1),t=!0),t||($("#joinPeer").prop("disabled",!0).text("Joining..."),$("#peerIdSubmit").prop("disabled",!0).text("Connect"),$("#peerId").val(peerId),$("#peerBtnGroup").removeClass("d-flex").addClass("d-none"),$("#connectionStatusPanel").removeClass("d-none"),updateConnectionStatus("Joining...","5",!1),startJoinConnection(peerId))})),$("#confirmSavePeerBtn").click((async()=>{const e=$("#peerIdToSave").val().trim(),n=$("#peerNameToSave").val().trim(),t=$("#save-peer-alert");if(t.addClass("d-none").text(""),!e||!n)return void t.text("Peer ID or Name cannot be empty").removeClass("d-none");localStorage.setItem("peerIds",e),localStorage.setItem("peerName",n),showAlert(`Peer ID "${e}" saved for notifications.`,!1);"granted"===await Notification.requestPermission()?$("#savePeerModal").modal("hide"):t.text("Notification permission denied. Cannot able to notify the joining request").removeClass("d-none")})),$("#settingBtn").click((function(){const e=localStorage.getItem("peerIds")||"",n=localStorage.getItem("peerName")||"";e&&($("#peerIdToSave").val(e),$("#peerNameToSave").val(n)),loadStunSettings(),loadApiKey()})),$(document).on("change",".stun-option",(()=>{const e=$(".stun-option:checked").map((function(){return this.value})).get();e.length<1?$("#stun-error").removeClass("d-none"):($("#stun-error").addClass("d-none"),localStorage.setItem("selectedStunServers",JSON.stringify(e)),$("#stunSaveStatus").text(" ( Saved Successfully! )"),setTimeout((()=>{$("#stunSaveStatus").text("")}),3e3))}));let t=!1;window.autoCheckInterval=setInterval((async()=>{if(isManuallyConnecting||t)return;const e=localStorage.getItem("peerIds")||"peer123",n=localStorage.getItem("peerName")||"Anonymous";if(!e)return;if(await fetchSDP(e,"offer")){if("granted"===Notification.permission&&"visible"!==document.visibilityState){new Notification("Wavelite",{body:`Peer "${e}" is requesting to connect.`,icon:"/logo.png"}).onclick=function(t){t.preventDefault(),window.focus(),$("#autoJoinMessage").text(`Peer "${e}" is requesting to connect. Do you want to join?`);const a=new bootstrap.Modal(document.getElementById("autoJoinModal"));a.show(),$("#autoJoinConfirmBtn").off("click").on("click",(()=>{a.hide(),setTimeout((()=>{isManuallyConnecting=!0,$("#peer-id").val(e),$("#chat-username").val(n),$("#joinPeer").click()}),300)}))}}else"denied"!==Notification.permission&&Notification.requestPermission().then((n=>{"granted"===n&&"visible"!==document.visibilityState&&new Notification("Wavelite",{body:`Peer "${e}" is requesting to connect.`,icon:"/logo.png"})}));if(t=!0,"visible"===document.visibilityState){$("#autoJoinMessage").text(`Peer "${e}" is requesting to connect. Do you want to join?`);const t=new bootstrap.Modal(document.getElementById("autoJoinModal"));t.show(),$("#autoJoinConfirmBtn").off("click").on("click",(()=>{t.hide(),setTimeout((()=>{isManuallyConnecting=!0,$("#peer-id").val(e),$("#chat-username").val(n),$("#joinPeer").click()}),300)}))}}else;}),3e3)}));